第三套大题：
一、
1、vi /etc/sysconfig/network-scripts/ifcfg-eth0 
IPADDR=IP地址
GATEWAY=网关
BOOTPROTO=static-----修改静态IP模式
2、service iptables stop
3、tar -zxvf /export/software/hadoop-2.7.4.tar.gz -C /export/servers
4、hadoop-env.sh core-site.xml hdfs-site.xml yarn-site.xml mapred-site.xml
5、hdfs namenode -format
6、start-all.sh
二、
1、jps
2、查看hadoop/logs目录下的hadoop-root-namenode-hadoop01.log文件（使用less、more、tail -n 数字查看）
3、将SecondNameNode的数据拷贝到NameNode中，重启NameNode
三、
hdfs:分布式存储
yarn:资源调度
mapreduce:分布式计算
四、
文件：a.txt
hello world
hello hadoop
spark hadoop
hive spark
hadoop hadoop
1、
1.1、WordCountMapper
String line = value.toString();
String[] words = line.split("");
	for (String word:words) {
		context.write(new Text(word), new IntWritable(1));
	}
1.2、WordCountReducer
int count = 0;
for (IntWritable value : values) {
	count += value.get();
}
context.write(new Text(key), new IntWritable(count));
1.3、运行结果：
hadoop 4
hello 2
hive 1
spark 2
world 1
2、
val sparkconf = new SparkConf().setAppName("WordCount").setMaster("local[2]")
val sparkContext = new SparkContext(sparkconf)
val data : RDD[String] = sparkContext.textFile("D:\\word\\words.txt")
val words :RDD[String] = data.flatMap(_.split(" "))
val wordAndOne :RDD[(String, Int)] = words.map(x =>(x,1))
val result: RDD[(String, Int)] = wordAndOne.reduceByKey(_+_)
val finalResult: Array[(String, Int)] = result.collect()
println(finalResult.toBuffer)
sparkContext.stop()
3、
1.查询语言不同：hive是hql语言，mysql是sql语句；
2.数据存储位置不同：hive是把数据存储在hdfs上，而mysql数据是存储在自己的系统中；
3.数据格式：hive数据格式可以用户自定义，mysql有自己的系统定义格式；
4.数据更新：hive不支持数据更新，只可以读，不可以写，而sql支持数据更新；
5.索引：hive没有索引，因此查询数据的时候是通过mapreduce很暴力的把数据都查询一遍，也造成了hive查询数据速度很慢的原因，而mysql有索引；
6.延迟性：hive延迟性高，原因就是上边一点所说的，而mysql延迟性低；
7.数据规模：hive存储的数据量超级大，而mysql只是存储一些少量的业务数据；
8.底层执行原理：hive底层是用的mapreduce，而mysql是excutor执行器；
